# FHIR GraphQL Schema. Version 3.5.0-14906

type Goal {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  priority: CodeableConcept
  description: CodeableConcept!
  subject: Reference!
  startDate: date  _startDate: ElementBase
  startCodeableConcept: CodeableConcept
  target: GoalTarget
  statusDate: date  _statusDate: ElementBase
  statusReason: String  _statusReason: ElementBase
  expressedBy: Reference
  addresses: [Reference]
  note: [Annotation]
  outcomeCode: [CodeableConcept]
  outcomeReference: [Reference]
}

type GoalTarget {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  measure: CodeableConcept
  detailQuantity: Quantity
  detailRange: Range
  detailCodeableConcept: CodeableConcept
  dueDate: date  _dueDate: ElementBase
  dueDuration: Duration
}

input Goal {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  priority: CodeableConcept
  description: CodeableConcept!
  subject: Reference!
  startDate: date  _startDate: ElementBase
  startCodeableConcept: CodeableConcept
  target: GoalTarget
  statusDate: date  _statusDate: ElementBase
  statusReason: String  _statusReason: ElementBase
  expressedBy: Reference
  addresses: [Reference]
  note: [Annotation]
  outcomeCode: [CodeableConcept]
  outcomeReference: [Reference]
}

input GoalTarget {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  measure: CodeableConcept
  detailQuantity: Quantity
  detailRange: Range
  detailCodeableConcept: CodeableConcept
  dueDate: date  _dueDate: ElementBase
  dueDuration: Duration
}

type GoalReadType {
  Goal(id : ID!) : Goal
}

type GoalListType {
  GoalList(_filter : String
    category : [token]
    identifier : [token]
    patient : [reference]
    start_date : [date]
    status : [token]
    subject : [reference]
    target_date : [date]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Goal]
}

type GoalConnectionType {
  GoalConection(_filter : String
    category : [token]
    identifier : [token]
    patient : [reference]
    start_date : [date]
    status : [token]
    subject : [reference]
    target_date : [date]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : GoalConnection
}

type GoalConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [GoalEdge]
}

type GoalEdge {
  mode : String
  score : Float
  resource : Goal
}

type GoalCreateType {
  GoalCreate(resource : Goal) : GoalCreation
}

type GoalCreation {
  location : String
  resource : Goal
  information : OperationOutcome
}

type GoalUpdateType {
  GoalUpdate(id : IDresource : Goal) : GoalUpdate
}

type GoalUpdate {
  resource : Goal
  information : OperationOutcome
}

type GoalDeleteType {
  GoalDelete(id : ID) : GoalDelete
}

type GoalDelete {
  information : OperationOutcome
}

