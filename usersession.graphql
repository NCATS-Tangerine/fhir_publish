# FHIR GraphQL Schema. Version 3.5.0-14906

type UserSession {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  user: Reference!
  status: UserSessionStatus
  workstation: Identifier
  focus: [Reference]
  created: instant  _created: ElementBase
  expires: instant  _expires: ElementBase
  context: [UserSessionContext]
}

type UserSessionStatus {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: code  _code: ElementBase
  source: code  _source: ElementBase
}

type UserSessionContext {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: String  _type: ElementBase
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
}

input UserSession {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  user: Reference!
  status: UserSessionStatus
  workstation: Identifier
  focus: [Reference]
  created: instant  _created: ElementBase
  expires: instant  _expires: ElementBase
  context: [UserSessionContext]
}

input UserSessionStatus {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: code  _code: ElementBase
  source: code  _source: ElementBase
}

input UserSessionContext {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: String  _type: ElementBase
  valueCodeableConcept: CodeableConcept
  valueQuantity: Quantity
}

type UserSessionReadType {
  UserSession(id : ID!) : UserSession
}

type UserSessionListType {
  UserSessionList(_filter : String
    focus : [reference]
    identifier : [token]
    patient : [reference]
    status : [token]
    user : [reference]
    workstation : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [UserSession]
}

type UserSessionConnectionType {
  UserSessionConection(_filter : String
    focus : [reference]
    identifier : [token]
    patient : [reference]
    status : [token]
    user : [reference]
    workstation : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : UserSessionConnection
}

type UserSessionConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [UserSessionEdge]
}

type UserSessionEdge {
  mode : String
  score : Float
  resource : UserSession
}

type UserSessionCreateType {
  UserSessionCreate(resource : UserSession) : UserSessionCreation
}

type UserSessionCreation {
  location : String
  resource : UserSession
  information : OperationOutcome
}

type UserSessionUpdateType {
  UserSessionUpdate(id : IDresource : UserSession) : UserSessionUpdate
}

type UserSessionUpdate {
  resource : UserSession
  information : OperationOutcome
}

type UserSessionDeleteType {
  UserSessionDelete(id : ID) : UserSessionDelete
}

type UserSessionDelete {
  information : OperationOutcome
}

