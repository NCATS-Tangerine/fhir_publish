# FHIR GraphQL Schema. Version 3.5.0-14906

type Medication {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  status: code  _status: ElementBase
  manufacturer: Reference
  form: CodeableConcept
  amount: Quantity
  ingredient: [MedicationIngredient]
  batch: MedicationBatch
}

type MedicationIngredient {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  isActive: Boolean  _isActive: ElementBase
  amount: Ratio
}

type MedicationBatch {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  lotNumber: String  _lotNumber: ElementBase
  expirationDate: dateTime  _expirationDate: ElementBase
  serialNumber: String  _serialNumber: ElementBase
}

input Medication {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  status: code  _status: ElementBase
  manufacturer: Reference
  form: CodeableConcept
  amount: Quantity
  ingredient: [MedicationIngredient]
  batch: MedicationBatch
}

input MedicationIngredient {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  itemCodeableConcept: CodeableConcept
  itemReference: Reference
  isActive: Boolean  _isActive: ElementBase
  amount: Ratio
}

input MedicationBatch {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  lotNumber: String  _lotNumber: ElementBase
  expirationDate: dateTime  _expirationDate: ElementBase
  serialNumber: String  _serialNumber: ElementBase
}

type MedicationReadType {
  Medication(id : ID!) : Medication
}

type MedicationListType {
  MedicationList(_filter : String
    code : [token]
    expiration_date : [date]
    form : [token]
    ingredient : [reference]
    ingredient_code : [token]
    lot_number : [token]
    manufacturer : [reference]
    serial_number : [token]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [Medication]
}

type MedicationConnectionType {
  MedicationConection(_filter : String
    code : [token]
    expiration_date : [date]
    form : [token]
    ingredient : [reference]
    ingredient_code : [token]
    lot_number : [token]
    manufacturer : [reference]
    serial_number : [token]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : MedicationConnection
}

type MedicationConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [MedicationEdge]
}

type MedicationEdge {
  mode : String
  score : Float
  resource : Medication
}

type MedicationCreateType {
  MedicationCreate(resource : Medication) : MedicationCreation
}

type MedicationCreation {
  location : String
  resource : Medication
  information : OperationOutcome
}

type MedicationUpdateType {
  MedicationUpdate(id : IDresource : Medication) : MedicationUpdate
}

type MedicationUpdate {
  resource : Medication
  information : OperationOutcome
}

type MedicationDeleteType {
  MedicationDelete(id : ID) : MedicationDelete
}

type MedicationDelete {
  information : OperationOutcome
}

