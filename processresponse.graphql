# FHIR GraphQL Schema. Version 3.5.0-14906

type ProcessResponse {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  created: dateTime  _created: ElementBase
  organization: Reference
  request: Reference
  outcome: code  _outcome: ElementBase
  disposition: String  _disposition: ElementBase
  requestProvider: Reference
  form: CodeableConcept
  processNote: [ProcessResponseProcessNote]
  error: [CodeableConcept]
  communicationRequest: [Reference]
}

type ProcessResponseProcessNote {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  text: String  _text: ElementBase
}

input ProcessResponse {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  created: dateTime  _created: ElementBase
  organization: Reference
  request: Reference
  outcome: code  _outcome: ElementBase
  disposition: String  _disposition: ElementBase
  requestProvider: Reference
  form: CodeableConcept
  processNote: [ProcessResponseProcessNote]
  error: [CodeableConcept]
  communicationRequest: [Reference]
}

input ProcessResponseProcessNote {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  text: String  _text: ElementBase
}

type ProcessResponseReadType {
  ProcessResponse(id : ID!) : ProcessResponse
}

type ProcessResponseListType {
  ProcessResponseList(_filter : String
    identifier : [token]
    organization : [reference]
    request : [reference]
    request_provider : [reference]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [ProcessResponse]
}

type ProcessResponseConnectionType {
  ProcessResponseConection(_filter : String
    identifier : [token]
    organization : [reference]
    request : [reference]
    request_provider : [reference]
    status : [token]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : ProcessResponseConnection
}

type ProcessResponseConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [ProcessResponseEdge]
}

type ProcessResponseEdge {
  mode : String
  score : Float
  resource : ProcessResponse
}

type ProcessResponseCreateType {
  ProcessResponseCreate(resource : ProcessResponse) : ProcessResponseCreation
}

type ProcessResponseCreation {
  location : String
  resource : ProcessResponse
  information : OperationOutcome
}

type ProcessResponseUpdateType {
  ProcessResponseUpdate(id : IDresource : ProcessResponse) : ProcessResponseUpdate
}

type ProcessResponseUpdate {
  resource : ProcessResponse
  information : OperationOutcome
}

type ProcessResponseDeleteType {
  ProcessResponseDelete(id : ID) : ProcessResponseDelete
}

type ProcessResponseDelete {
  information : OperationOutcome
}

