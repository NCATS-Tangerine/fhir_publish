# FHIR GraphQL Schema. Version 3.5.0-14906

type ImagingStudy {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  modality: [Coding]
  subject: Reference!
  context: Reference
  started: dateTime  _started: ElementBase
  basedOn: [Reference]
  referrer: Reference
  interpreter: [Reference]
  endpoint: [Reference]
  numberOfSeries: unsignedInt  _numberOfSeries: ElementBase
  numberOfInstances: unsignedInt  _numberOfInstances: ElementBase
  procedureReference: Reference
  procedureCode: [CodeableConcept]
  location: Reference
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  note: [Annotation]
  description: String  _description: ElementBase
  series: [ImagingStudySeries]
}

type ImagingStudySeries {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier!
  number: unsignedInt  _number: ElementBase
  modality: Coding!
  description: String  _description: ElementBase
  numberOfInstances: unsignedInt  _numberOfInstances: ElementBase
  endpoint: [Reference]
  bodySite: Coding
  laterality: Coding
  specimen: [Reference]
  started: dateTime  _started: ElementBase
  performer: [ImagingStudySeriesPerformer]
  instance: [ImagingStudySeriesInstance]
}

type ImagingStudySeriesPerformer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

type ImagingStudySeriesInstance {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier!
  number: unsignedInt  _number: ElementBase
  sopClass: Coding!
  title: String  _title: ElementBase
}

input ImagingStudy {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  modality: [Coding]
  subject: Reference!
  context: Reference
  started: dateTime  _started: ElementBase
  basedOn: [Reference]
  referrer: Reference
  interpreter: [Reference]
  endpoint: [Reference]
  numberOfSeries: unsignedInt  _numberOfSeries: ElementBase
  numberOfInstances: unsignedInt  _numberOfInstances: ElementBase
  procedureReference: Reference
  procedureCode: [CodeableConcept]
  location: Reference
  reasonCode: [CodeableConcept]
  reasonReference: [Reference]
  note: [Annotation]
  description: String  _description: ElementBase
  series: [ImagingStudySeries]
}

input ImagingStudySeries {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier!
  number: unsignedInt  _number: ElementBase
  modality: Coding!
  description: String  _description: ElementBase
  numberOfInstances: unsignedInt  _numberOfInstances: ElementBase
  endpoint: [Reference]
  bodySite: Coding
  laterality: Coding
  specimen: [Reference]
  started: dateTime  _started: ElementBase
  performer: [ImagingStudySeriesPerformer]
  instance: [ImagingStudySeriesInstance]
}

input ImagingStudySeriesPerformer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

input ImagingStudySeriesInstance {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier!
  number: unsignedInt  _number: ElementBase
  sopClass: Coding!
  title: String  _title: ElementBase
}

type ImagingStudyReadType {
  ImagingStudy(id : ID!) : ImagingStudy
}

type ImagingStudyListType {
  ImagingStudyList(_filter : String
    accession : [token]
    basedon : [reference]
    bodysite : [token]
    context : [reference]
    dicom_class : [token]
    endpoint : [reference]
    identifier : [token]
    inst_id : [token]
    modality : [token]
    patient : [reference]
    performer : [reference]
    reason : [token]
    series : [token]
    started : [date]
    status : [token]
    study : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : [ImagingStudy]
}

type ImagingStudyConnectionType {
  ImagingStudyConection(_filter : String
    accession : [token]
    basedon : [reference]
    bodysite : [token]
    context : [reference]
    dicom_class : [token]
    endpoint : [reference]
    identifier : [token]
    inst_id : [token]
    modality : [token]
    patient : [reference]
    performer : [reference]
    reason : [token]
    series : [token]
    started : [date]
    status : [token]
    study : [token]
    subject : [reference]
    _text : [String]
    _content : [String]
    _id : [token]
    _lastUpdated : [date]
    _profile : [reference]
    _query : [token]
    _security : [token]
    _source : [uri]
    _tag : [token]
    _sort : String
    _count : Int
    _cursor : String) : ImagingStudyConnection
}

type ImagingStudyConnection {
  count : Int
  offset : Int
  pagesize : Int
  first : ID
  previous : ID
  next : ID
  last : ID
  edges : [ImagingStudyEdge]
}

type ImagingStudyEdge {
  mode : String
  score : Float
  resource : ImagingStudy
}

type ImagingStudyCreateType {
  ImagingStudyCreate(resource : ImagingStudy) : ImagingStudyCreation
}

type ImagingStudyCreation {
  location : String
  resource : ImagingStudy
  information : OperationOutcome
}

type ImagingStudyUpdateType {
  ImagingStudyUpdate(id : IDresource : ImagingStudy) : ImagingStudyUpdate
}

type ImagingStudyUpdate {
  resource : ImagingStudy
  information : OperationOutcome
}

type ImagingStudyDeleteType {
  ImagingStudyDelete(id : ID) : ImagingStudyDelete
}

type ImagingStudyDelete {
  information : OperationOutcome
}

